apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task makeJar(type: Copy) {
//删除存在的
    delete'build/libs/rxhttp.jar'
//设置拷贝的文件
    from('build/intermediates/packaged-classes/release/')
//打进jar包后的文件目录
    into('build/libs/')
//将classes.jar放入build/libs/目录下
//include ,exclude参数来设置过滤
//（我们只关心classes.jar这个文件）
    include('classes.jar')
//重命名
    rename ('classes.jar','rxhttp.jar')
}
makeJar.dependsOn(build)

dependencies {
//    api "io.reactivex.rxjava2:rxjava:2.2.13"
//    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // Rxjava配合的Retrofit必须使用此版本
    api "io.reactivex.rxjava2:rxjava:2.1.12"
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.squareup.retrofit2:converter-gson:2.4.0'
    api 'com.squareup.retrofit2:converter-scalars:2.4.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    implementation project(':commlibrary')
    testImplementation 'junit:junit:4.12'
}
